// Mocks generated by Mockito 5.4.3 from annotations
// in quick_sell/test/product_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hive/hive.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:quick_sell/data/data_sources/product_local_data_source.dart'
    as _i3;
import 'package:quick_sell/domain/models/product.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductLocalDataSource extends _i1.Mock
    implements _i3.ProductLocalDataSource {
  MockProductLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<_i4.Product> get productBox => (super.noSuchMethod(
        Invocation.getter(#productBox),
        returnValue: _FakeBox_0<_i4.Product>(
          this,
          Invocation.getter(#productBox),
        ),
      ) as _i2.Box<_i4.Product>);

  @override
  _i5.Future<List<_i4.Product>> getLocalProducts() => (super.noSuchMethod(
        Invocation.method(
          #getLocalProducts,
          [],
        ),
        returnValue: _i5.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i5.Future<List<_i4.Product>>);

  @override
  _i5.Future<void> saveLocalProducts(List<_i4.Product>? products) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLocalProducts,
          [products],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
